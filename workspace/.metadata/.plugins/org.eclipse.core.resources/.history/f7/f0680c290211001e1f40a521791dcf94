package com.abner.minhasfinancas.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
public class SecurityConfiguration {

	/*
	 * @Bean public UserDetailsService userDetailsService() { return new
	 * ShopmeUserDetailsService(); }
	 */

	@Bean
	public BCryptPasswordEncoder passwordEncoder() {
		return new BCryptPasswordEncoder();
	}

	@Bean
	public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {

		http.csrf().disable().authorizeRequests().anyRequest().authenticated().and().httpBasic();

		return http.build();
	}

	@Bean
	protected void configure(AuthenticationManagerBuilder auth) throws Exception {

		String senhaCodificada = passwordEncoder().encode("qwe123");

		auth.inMemoryAuthentication().withUser("usuario").password(senhaCodificada).roles("USER");
	}

	/*
	 * @Bean public WebSecurityCustomizer webSecurityCustomizer() { return (web) ->
	 * web.ignoring().antMatchers("/images/**", "/js/**", "/webjars/**"); }
	 */
}
